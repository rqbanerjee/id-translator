== ID Translator
=== Rajat Banerjee http://github.com/rqbanerjee/id-translator

This project is to help Utility Companies mask the ID fields they give to third-party
companies, like Opower. It allows the utility to obfuscate the Personally Identifiable
Information (PII) that some countries consider IDs to be, while passing on IDs to the
3rd party that are:

1. Unique:  an identifier represents one and only one entity (customer, account, service point, or site)

2. Stable:  an entity is always represented by the same identifier

3. Opaque:  there should be no meaning or information that can be derived from the identifier

This code is a Proof Of Concept *POC* and is not intended for production use.

== License
ID Translator - Converts private account IDs into stable, redistributable hashes
Copyright (C) 2013 Rajat Banerjee

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

== Using
This application is running at Heroku.com:

http://mighty-crag-3868.herokuapp.com/

It is running on the free version of Heroku and may take a moment to start up.
== Running
Can be run with web brick by typing "rails server"

Can be run with unicorn (preferable if multiple users will hit it) with your own configuration. It is pretty easy
from the Heroku site:

https://devcenter.heroku.com/articles/rails-unicorn

== Tasks to productionalize this code
* Make variable length hashes work. Right now all hashes come out to by 28 bytes
* Salt the Identifier.real_id field, so that if hackers get into the db, it would be difficult to obtain the real ids
* Add authentication via Oauth or openid
* Add High Availability